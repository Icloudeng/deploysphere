- name: Install Expect
  ansible.builtin.package:
    name:
      - expect
    state: present

- name: Set vm.max_map_count runtime parameter
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: "262144"
    state: present
    reload: yes

- name: Verify vm.max_map_count setting
  command: sysctl vm.max_map_count
  register: sysctl_output
  changed_when: "'262144' not in sysctl_output.stdout"

- name: Reboot the system if vm.max_map_count was not set
  reboot:
    msg: "Rebooting to apply vm.max_map_count changes"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 60
  when: sysctl_output.changed

# Install Docker
- include_tasks: ../../tasks/docker.yaml

- set_fact:
    wazuh_path: "{{ project_path }}/repository"

- name: Clone Wazuh Docker repo from GitHub
  git:
    repo: "https://github.com/wazuh/wazuh-docker.git"
    dest: "{{ wazuh_path }}"
    version: "{{ wazuh_version }}"
    force: no
    update: no

- name: "Copy .env template"
  template:
    src: .env.j2
    dest: "{{ wazuh_path }}/single-node/.env"
    force: yes

- name: Generate self-signed certificates for each cluster node
  command: docker compose -f generate-indexer-certs.yml run --rm generator
  args:
    chdir: "{{ wazuh_path }}/single-node"
    creates: "{{ wazuh_path }}/single-node/config/wazuh_indexer_ssl_certs/root-ca.pem"

- name: Replace old INDEXER_PASSWORD
  ansible.builtin.replace:
    path: "{{ wazuh_path }}/single-node/docker-compose.yml"
    regexp: "INDEXER_PASSWORD=SecretPassword"
    replace: "INDEXER_PASSWORD={{ app_secret }}"
    backup: true

- name: Replace old DASHBOARD_PASSWORD
  ansible.builtin.replace:
    path: "{{ wazuh_path }}/single-node/docker-compose.yml"
    regexp: "DASHBOARD_PASSWORD=kibanaserver"
    replace: "DASHBOARD_PASSWORD={{ app_secret }}"
    backup: true

# - name: Ensure lines containing INDEXER_PASSWORD or DASHBOARD_PASSWORD are absent
#   lineinfile:
#     path: "{{ wazuh_path }}/single-node/docker-compose.yml"
#     regexp: "^(.*)(INDEXER_PASSWORD|DASHBOARD_PASSWORD)(.*)$"
#     state: absent
#     backup: true

- name: Start the Wazuh single-node deployment
  command: "docker compose up -d --force-recreate"
  args:
    chdir: "{{ wazuh_path }}/single-node"

- set_fact:
    url_ping: "https://{{ vm_ip }}"

- name: Pause play until a URL is reachable from this host
  ignore_errors: true
  ansible.builtin.uri:
    url: "{{ url_ping }}"
    follow_redirects: none
    validate_certs: no
    method: GET
  register: _result
  until: _result.status >= 200
  retries: 30
  delay: 5

# Change admin credentials
- name: Stop the deployment stack if it's running
  command: "docker compose down"
  args:
    chdir: "{{ wazuh_path }}/single-node"

- name: Run docker command to get hashed password
  ansible.builtin.shell: |
    docker run --rm -ti wazuh/wazuh-indexer:{{ wazuh_version_n }} bash /usr/share/wazuh-indexer/plugins/opensearch-security/tools/hash.sh -p {{ app_secret }} | tail -n1
  args:
    executable: /bin/bash
  register: hash_output
  changed_when: false

- name: Set fact for the hashed password
  ansible.builtin.set_fact:
    hashed_password: "{{ hash_output.stdout_lines[0] }}"
  when: hash_output.stdout_lines is defined and hash_output.stdout_lines | length > 0

- name: Show the hashed password
  ansible.builtin.debug:
    msg: "The hashed password is: {{ hashed_password }}"

- name: Replace User Password
  ansible.builtin.replace:
    path: "{{ wazuh_path }}/single-node/config/wazuh_indexer/internal_users.yml"
    after: "admin:"
    before: "kibanaro:"
    regexp: 'hash:(.*)"$'
    replace: 'hash: "{{ hashed_password }}"'

- name: Recreate the Wazuh containers
  command: "docker compose up -d"
  args:
    chdir: "{{ wazuh_path }}/single-node"

- name: Sleep for 15 seconds
  ansible.builtin.wait_for:
    timeout: 15

- name: Run expect to wait for a successful PXE boot via out-of-band CIMC
  ansible.builtin.shell: |
    set timeout 300

    spawn docker exec -it single-node-wazuh.indexer-1 bash

    expect "wazuh-indexer@"
    send "export INSTALLATION_DIR=/usr/share/wazuh-indexer\r"
    send "CACERT=$INSTALLATION_DIR/certs/root-ca.pem\r"
    send "KEY=$INSTALLATION_DIR/certs/admin-key.pem\r"
    send "CERT=$INSTALLATION_DIR/certs/admin.pem\r"
    send "export JAVA_HOME=/usr/share/wazuh-indexer/jdk\r"
    send "bash /usr/share/wazuh-indexer/plugins/opensearch-security/tools/securityadmin.sh -cd /usr/share/wazuh-indexer/opensearch-security/ -nhnv -cacert  $CACERT -cert $CERT -key $KEY -p 9200 -icl\r"

    expect "wazuh-indexer@"
    send "exit\r"

    expect eof

    exit 0
  args:
    chdir: "{{ wazuh_path }}/single-node"
    executable: /usr/bin/expect

- set_fact:
    indexer_template: "https://raw.githubusercontent.com/wazuh/wazuh/{{ wazuh_version }}/extensions/elasticsearch/7.x/wazuh-template.json"

- name: Download Wazuh template and upload to Elasticsearch
  retries: 5
  delay: 5
  register: _result1
  until: _result1.status == 200 or _result1.status == 201
  uri:
    url: "https://localhost:9200/_template/wazuh"
    method: PUT
    user: "admin"
    password: "{{ app_secret }}"
    body_format: json
    headers:
      Content-Type: "application/json"
    validate_certs: no
    status_code: [200, 201]
    force_basic_auth: yes
    body: "{{ lookup('ansible.builtin.url', indexer_template, wantlist=False, split_lines=False) }}"
