import puppeteer from "puppeteer";

const baseUrl = "http://{{ vm_ip }}";
const ADMIN_NAME = "{{ admin_name }}";
const ADMIN_EMAIL = "{{ admin_email }}";
const ADMIN_PASSWORD = "{{ app_secret }}";
const ORGANIZATION_NAME = "{{ organization_name }}";

(async () => {
  const browser = await puppeteer.launch({
    headless: "new",
    args: ["--no-sandbox"],
    timeout: 60_000,
  });

  const page = await browser.newPage();

  // Navigate the page to a URL
  await page.goto(baseUrl + "/setup");

  // Set screen size
  await page.setViewport({ width: 1200, height: 1024 });

  /**
   * ===========================
   * Redash Initial Setup
   */
  //   NAME
  const lname = await page.waitForSelector(
    "form[name=create_account] input[name=name]"
  );
  await lname.type(ADMIN_NAME);

  //   EMAIL
  const lemail = await page.waitForSelector(
    "form[name=create_account] input[name=email]"
  );
  await lemail.type(ADMIN_EMAIL);

  //   PASSWORD
  const lpassword = await page.waitForSelector(
    "form[name=create_account] input[name=password]"
  );
  await lpassword.type(ADMIN_PASSWORD);

  //   ORG NAME
  const lorg_name = await page.waitForSelector(
    "form[name=create_account] input[name=org_name]"
  );
  await lorg_name.type(ORGANIZATION_NAME);

  const submitBtn = await page.waitForSelector(
    "form[name=create_account] button[type=submit]"
  );
  await Promise.all([page.waitForNavigation(), submitBtn.click()]);

  await browser.close();
})();
