- set_fact:
    _post_size: 200M
    _install_composer: "{{ install_composer | default(true) }}"
    _php_version: "{{ php_version | default('8.2') }}"
    _php_extensions: "{{ php_extensions | default(['cli', 'intl', 'bcmath', 'soap', 'fpm', 'pdo', 'gd', 'zip', 'common', 'fileinfo', 'mysql', 'mbstring', 'xml', 'curl']) }}"

- name: "PHP Version"
  debug:
    var: _php_version

- name: "PHP Extensions"
  debug:
    var: _php_extensions

- name: Install prerequisite packages
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600
  loop:
    - curl
    - git
    - software-properties-common
    - ca-certificates
    - lsb-release
    - apt-transport-https
    - unzip

- name: Add repository for PHP from Ondřej Surý
  become: true
  ansible.builtin.apt_repository:
    repo: ppa:ondrej/php
    state: present
    update_cache: yes
  environment:
    LC_ALL: C.UTF-8

- name: Update apt cache
  become: true
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install PHP with a specific version
  become: true
  ansible.builtin.apt:
    name: "php{{ _php_version }}"
    state: present
    update_cache: yes

- name: Install PHP extensions
  become: true
  ansible.builtin.apt:
    name: "php{{ _php_version }}-{{ item }}"
    state: present
    update_cache: yes
  loop: "{{ _php_extensions }}"

- stat:
    path: "/etc/php/{{ _php_version }}/fpm/php.ini"
  register: php_config_file

- name: Block | Update PHP INIT File
  block:
    - name: Update PHP Post Size directive
      lineinfile:
        path: /etc/php/{{ _php_version }}/fpm/php.ini
        regexp: "^{{ item.key }}"
        line: "{{ item.key }} = {{ item.value }}"
        state: present
      loop:
        - key: post_max_size
          value: "{{ _post_size }}"
        - key: upload_max_filesize
          value: "{{ _post_size }}"
        - key: max_file_uploads
          value: "40"

    - name: restart php-fpm
      service:
        name: php{{ _php_version }}-fpm
        state: restarted
  when: php_config_file.stat.exists

- name: Check if Composer is already installed
  stat:
    path: "/usr/local/bin/composer"
  register: composer_file

- block:
    - name: Download Composer installer
      become: true
      ansible.builtin.get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-setup.php
        mode: "0755"

    - name: Run Composer installer
      become: true
      ansible.builtin.command: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer

    - name: Remove Composer installer
      become: true
      ansible.builtin.file:
        path: /tmp/composer-setup.php
        state: absent

  when: _install_composer and not composer_file.stat.exists
